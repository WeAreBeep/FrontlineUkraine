@using Web.Db
@using Web.Snippets
@using Web.Snippets.System
@using Web.Snippets.Microsoft.AspNetCore.Mvc.Rendering;
@model SuppliesViewModel


@{
    string supplierTypeVueName = Html.NameFor(m => m.SupplierType);
    string transportTypeVueName = Html.NameFor(m => m.TransportType);
}

<fieldset id="supplier_details" class="top">
    <legend>Company Details</legend>
    <div>
        @Html.LabelsFor(m => m.OrganisationName)
        @Html.TextBoxFor(m => m.OrganisationName)
        @Html.HtmlValidationMessageFor(m => m.OrganisationName)
    </div>
    <div>
        @Html.LabelsFor(m => m.Description)
        @Html.TextBoxFor(m => m.Description)
        @Html.HtmlValidationMessageFor(m => m.Description)
    </div>
    <div>
        @Html.LabelsFor(m => m.SupplierType)
        <div class="secondary">
            <label>
                @Html.RadioButtonFor(m => m.SupplierType, SupplierTypes.Manufacturer.ToString(), new { v_model = @supplierTypeVueName })
                @SupplierTypes.Manufacturer.GetText()
            </label>
        </div>
        <div class="secondary">
            <label class="cursor_pointer">
                @Html.RadioButtonFor(m => m.SupplierType, SupplierTypes.AidOrganisationOrCharity.ToString(), new { v_model = @supplierTypeVueName })
                @SupplierTypes.AidOrganisationOrCharity.GetText()
            </label>
        </div>
        <div class="secondary">
            <label class="cursor_pointer">
                @Html.RadioButtonFor(m => m.SupplierType, SupplierTypes.CommunityGroup.ToString(), new { v_model = @supplierTypeVueName })
                @SupplierTypes.CommunityGroup.GetText()
            </label>
        </div>
        <div class="secondary">
            <label class="cursor_pointer">
                @Html.RadioButtonFor(m => m.SupplierType, SupplierTypes.Other.ToString(), new { v_model = @supplierTypeVueName })
                @SupplierTypes.Other.GetText()
            </label>
        </div>
        <div v-bind:class="{ active: @supplierTypeVueName === 'Other' }" class="toggleable indent_small">
            @Html.LabelsFor(m => m.SupplierTypeOther)
            @Html.TextBoxFor(m => m.SupplierTypeOther)
            @Html.HtmlValidationMessageFor(m => m.SupplierTypeOther)
        </div>
        @Html.HtmlValidationMessageFor(m => m.SupplierType)
    </div>

</fieldset>



<fieldset id="supplier_contact">
    <legend>Contact Details</legend>
    <div>
        @Html.LabelsFor(m => m.Email)
        @Html.TextBoxFor(m => m.Email)
        @Html.HtmlValidationMessageFor(m => m.Email)
    </div>
    <div>
        @Html.LabelsFor(m => m.Website)
        @Html.TextBoxFor(m => m.Website)
        @Html.HtmlValidationMessageFor(m => m.Website)
    </div>
    <div>
        @Html.LabelsFor(m => m.PhoneNumber)
        @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "med" })
        @Html.HtmlValidationMessageFor(m => m.PhoneNumber)
    </div>
    <div>
        @Html.LabelsFor(m => m.ContactName)
        @Html.TextBoxFor(m => m.ContactName)
        @Html.HtmlValidationMessageFor(m => m.ContactName)
    </div>
    <div>
        @Html.LabelsFor(m => m.Postcode)
        @Html.TextBoxFor(m => m.Postcode)
        @Html.HtmlValidationMessageFor(m => m.Postcode)
    </div>
    @Html.HiddenFor(m => m.Id)
</fieldset>


<fieldset id="supplier_resource">
    <legend>Needs</legend>
    <p>
        <b>Domestic</b>
    </p>
    @foreach (var (name, categorySet) in PpeTypesEnumExtension.DomesticCategories)
    {
        <p>@(name)</p>
        <div>
            @foreach (var (value, i ) in Model.PpeTypes.Select((value, i) => (value, i)))
            {
                if (categorySet.Contains(value.Type))
                {
                    @Html.EditorFor(m => m.PpeTypes[i])
                    @Html.HtmlValidationMessageFor(m => m.PpeTypes[i])
                }
            }
        </div>
    }
    <p>
        <b>(NON-DRUG) MEDICAL SUPPLIES</b>
    </p>
    @foreach (var (name, categorySet) in PpeTypesEnumExtension.NonDrugMedicalSuppliesCategory)
    {
        <p>@(name)</p>
        <div>
            @foreach (var (value, i ) in Model.PpeTypes.Select((value, i) => (value, i)))
            {
                if (categorySet.Contains(value.Type))
                {
                    @Html.EditorFor(m => m.PpeTypes[i])
                    @Html.HtmlValidationMessageFor(m => m.PpeTypes[i])
                }
            }
        </div>
    }
</fieldset>

<fieldset id="transport">
    <legend>Transport</legend>
    <div>
        <div>
            @Html.LabelsFor(m => m.TransportType)
            @Html.DescriptionFor(m => m.TransportType)
        </div>
        <div>
            <label>
                @Html.RadioButtonFor(m => m.TransportType, TransportType.Yes.ToString(), new { v_model = @transportTypeVueName })
                @TransportType.Yes.GetText()
            </label>
        </div>
        <div>
            <label>
                @Html.RadioButtonFor(m => m.TransportType, TransportType.No.ToString(), new { v_model = @transportTypeVueName })
                @TransportType.No.GetText()
            </label>
        </div>
        <div>
            <label>
                @Html.RadioButtonFor(m => m.TransportType, TransportType.Other.ToString(), new { v_model = @transportTypeVueName })
                @TransportType.Other.GetText()
            </label>
        </div>
        
        <div v-bind:class="{ active: @transportTypeVueName === '@TransportType.Other' }" class="toggleable indent">
            @Html.LabelsFor(m => m.TransportTypeOther)
            @Html.DescriptionFor(m => m.TransportTypeOther)
            @Html.TextBoxFor(m => m.TransportTypeOther)
            @Html.HtmlValidationMessageFor(m => m.TransportType)
        </div>
    </div>
</fieldset>
